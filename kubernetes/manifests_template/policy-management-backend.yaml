apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-management-backend
  labels:
    app: policy-management-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: policy-management-backend
  template:
    metadata:
      labels:
        app: policy-management-backend
    spec:
      containers:
        - env:
            - name: CUSTOMERCORE_BASEURL
              value: http://ae5dddc65f68e48169d636f5547461df-1059949939.eu-central-1.elb.amazonaws.com:8110
            - name: SPRING_BOOT_ADMIN_CLIENT_URL
              value: http://ab06d343e04c94c958403c48dee2bee3-958230476.eu-central-1.elb.amazonaws.com:9000
            - name: SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_BASE_URL
              value: http://a0053ede0e7384b40a84df5293efe962-252133721.eu-central-1.elb.amazonaws.com:8090
          image: ###URL_ECR###:policy-management-backend-latest
          imagePullPolicy: Always
          name: policy-management-backend
          ports:
            - containerPort: 8090
            - containerPort: 61613
            - containerPort: 61616
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: policy-management-backend
spec:
  selector:
    app: policy-management-backend
  ports:
    - name: "8090"
      port: 8090
      targetPort: 8090
  type: LoadBalancer
---
# Not sure why, but we need two distinct LoadBalancers for this to work:
apiVersion: v1
kind: Service
metadata:
  name: policy-management-backend-queue
spec:
  selector:
    app: policy-management-backend
  ports:
    - name: "61613"
      port: 61613
      targetPort: 61613
    - name: "61616"
      port: 61616
      targetPort: 61616
  type: LoadBalancer
