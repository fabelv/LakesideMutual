
spring.application.name = customer-core

spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.default-property-inclusion=NON_NULL

# MySQL Configuration
spring.datasource.url=jdbc:mysql://lakesidemutual-rdsdbinstance-qopvyib4annm.cbs06ksyewom.eu-central-1.rds.amazonaws.com:3306/customer_core_db
spring.datasource.username=admin
spring.datasource.password=securepassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

server.port = 8110

management.endpoints.web.exposure.include=*
management.info.git.mode=full

apikey.header=Authorization
# API keys should not be hardcoded in a real application but injected by the
# container or managed in a data store. We provide it here for convenience:
apikey.validkeys=b318ad736c6c844b;999ab497f8ec1052;9b93ebe19e16bbbd

# needed to get Thymeleaf/Web Services demo to work (TODO tbc):
spring.main.allow-bean-definition-overriding=true

# Enable request logging, see the RequestLoggingFilterConfig for details
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

